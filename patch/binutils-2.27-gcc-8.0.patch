diff -Naur binutils-2.27-pure/bfd/configure binutils-2.27/bfd/configure
--- binutils-2.27-pure/bfd/configure	2016-08-03 04:33:36.000000000 -0400
+++ binutils-2.27/bfd/configure	2022-02-10 13:39:12.630277900 -0500
@@ -12241,7 +12241,7 @@
 . $srcdir/../bfd/development.sh
 
 # Default set of GCC warnings to enable.
-GCC_WARN_CFLAGS="-W -Wall -Wstrict-prototypes -Wmissing-prototypes"
+GCC_WARN_CFLAGS="-W -Wall -Wstrict-prototypes -Wmissing-prototypes -Wno-implicit-fallthrough -Wno-cast-function-type -Wno-stringop-truncation"
 
 # Add -Wshadow if the compiler is a sufficiently recent version of GCC.
 cat confdefs.h - <<_ACEOF >conftest.$ac_ext
diff -Naur binutils-2.27-pure/bfd/elf.c binutils-2.27/bfd/elf.c
--- binutils-2.27-pure/bfd/elf.c	2016-08-03 03:36:50.000000000 -0400
+++ binutils-2.27/bfd/elf.c	2022-02-10 13:39:12.630277900 -0500
@@ -709,7 +709,8 @@
 	      if (num_group == 0)
 		{
 		  elf_tdata (abfd)->group_sect_ptr = NULL;
-		  elf_tdata (abfd)->num_group = num_group = -1;
+		  num_group = (unsigned) -1;
+		  elf_tdata (abfd)->num_group = num_group;
 		  (*_bfd_error_handler) (_("%B: no valid group sections found"), abfd);
 		  bfd_set_error (bfd_error_bad_value);
 		}
diff -Naur binutils-2.27-pure/bfd/plugin.c binutils-2.27/bfd/plugin.c
--- binutils-2.27-pure/bfd/plugin.c	2016-08-03 03:36:51.000000000 -0400
+++ binutils-2.27/bfd/plugin.c		2022-02-10 13:39:12.637778000 -0500
@@ -348,7 +348,7 @@
     {
       char *full_name;
       struct stat s;
-      int valid_plugin;
+      int valid_plugin = 0;
 
       full_name = concat (p, "/", ent->d_name, NULL);
       if (stat(full_name, &s) == 0 && S_ISREG (s.st_mode))
diff -Naur binutils-2.27-pure/bfd/warning.m4 binutils-2.27/bfd/warning.m4
--- binutils-2.27-pure/bfd/warning.m4	2016-08-03 03:36:51.000000000 -0400
+++ binutils-2.27/bfd/warning.m4	2022-02-10 13:39:12.637778000 -0500
@@ -22,7 +22,7 @@
 . $srcdir/../bfd/development.sh
 
 # Default set of GCC warnings to enable.
-GCC_WARN_CFLAGS="-W -Wall -Wstrict-prototypes -Wmissing-prototypes"
+GCC_WARN_CFLAGS="-W -Wall -Wstrict-prototypes -Wmissing-prototypes -Wno-implicit-fallthrough -Wno-cast-function-type -Wno-stringop-truncation"
 
 # Add -Wshadow if the compiler is a sufficiently recent version of GCC.
 AC_EGREP_CPP([^[0-3]$],[__GNUC__],,GCC_WARN_CFLAGS="$GCC_WARN_CFLAGS -Wshadow")
diff -Naur binutils-2.27-pure/binutils/configure binutils-2.27/binutils/configure
--- binutils-2.27-pure/binutils/configure	2016-08-03 04:33:38.000000000 -0400
+++ binutils-2.27/binutils/configure	2022-02-10 13:39:12.682778700 -0500
@@ -11946,7 +11946,7 @@
 . $srcdir/../bfd/development.sh
 
 # Default set of GCC warnings to enable.
-GCC_WARN_CFLAGS="-W -Wall -Wstrict-prototypes -Wmissing-prototypes"
+GCC_WARN_CFLAGS="-W -Wall -Wstrict-prototypes -Wmissing-prototypes -Wno-implicit-fallthrough -Wno-cast-function-type -Wno-stringop-truncation"
 
 # Add -Wshadow if the compiler is a sufficiently recent version of GCC.
 cat confdefs.h - <<_ACEOF >conftest.$ac_ext
diff -Naur binutils-2.27-pure/binutils/stabs.c binutils-2.27/binutils/stabs.c
--- binutils-2.27-pure/binutils/stabs.c	2016-08-03 03:36:51.000000000 -0400
+++ binutils-2.27/binutils/stabs.c	2022-02-10 13:39:12.692778900 -0500
@@ -2702,7 +2702,7 @@
 	      ++*pp;
 	      voffset &= 0x7fffffff;
 
-	      if (**pp == ';' || *pp == '\0')
+	      if (**pp == ';' || **pp == '\0')
 		{
 		  /* Must be g++ version 1.  */
 		  context = DEBUG_TYPE_NULL;
diff -Naur binutils-2.27-pure/gas/config/tc-v850.c binutils-2.27/gas/config/tc-v850.c
--- binutils-2.27-pure/gas/config/tc-v850.c	2016-08-03 03:36:51.000000000 -0400
+++ binutils-2.27/gas/config/tc-v850.c	2022-02-10 13:39:12.717779200 -0500
@@ -2298,7 +2298,7 @@
   const unsigned char *opindex_ptr;
   int next_opindex;
   int relaxable = 0;
-  unsigned long insn;
+  unsigned long insn = 0;
   unsigned long insn_size;
   char *f = NULL;
   int i;
diff -Naur binutils-2.27-pure/gas/configure binutils-2.27/gas/configure
--- binutils-2.27-pure/gas/configure	2016-08-03 04:33:37.000000000 -0400
+++ binutils-2.27/gas/configure	2022-02-10 13:39:12.760279900 -0500
@@ -11722,7 +11722,7 @@
 . $srcdir/../bfd/development.sh
 
 # Default set of GCC warnings to enable.
-GCC_WARN_CFLAGS="-W -Wall -Wstrict-prototypes -Wmissing-prototypes"
+GCC_WARN_CFLAGS="-W -Wall -Wstrict-prototypes -Wmissing-prototypes -Wno-implicit-fallthrough -Wno-cast-function-type -Wno-stringop-truncation"
 
 # Add -Wshadow if the compiler is a sufficiently recent version of GCC.
 cat confdefs.h - <<_ACEOF >conftest.$ac_ext
diff -Naur binutils-2.27-pure/gas/stabs.c binutils-2.27/gas/stabs.c
--- binutils-2.27-pure/gas/stabs.c	2016-08-03 03:36:51.000000000 -0400
+++ binutils-2.27/gas/stabs.c	2022-02-10 13:39:12.770280100 -0500
@@ -540,12 +540,12 @@
   while (tmp < file_endp)
     {
       const char *bslash = strchr (tmp, '\\');
-      size_t len = (bslash) ? (size_t) (bslash - tmp + 1) : strlen (tmp);
+      size_t len = (bslash != NULL) ? bslash - tmp + 1 : file_endp - tmp;
 
       /* Double all backslashes, since demand_copy_C_string (used by
 	 s_stab to extract the part in quotes) will try to replace them as
 	 escape sequences.  backslash may appear in a filespec.  */
-      strncpy (bufp, tmp, len);
+      memcpy (bufp, tmp, len);
 
       tmp += len;
       bufp += len;
diff -Naur binutils-2.27-pure/gold/configure binutils-2.27/gold/configure
--- binutils-2.27-pure/gold/configure	2016-08-03 03:36:53.000000000 -0400
+++ binutils-2.27/gold/configure	2022-02-10 13:39:12.795280400 -0500
@@ -6724,7 +6724,7 @@
 . $srcdir/../bfd/development.sh
 
 # Default set of GCC warnings to enable.
-GCC_WARN_CFLAGS="-W -Wall -Wstrict-prototypes -Wmissing-prototypes"
+GCC_WARN_CFLAGS="-W -Wall -Wstrict-prototypes -Wmissing-prototypes -Wno-implicit-fallthrough -Wno-cast-function-type -Wno-stringop-truncation"
 
 # Add -Wshadow if the compiler is a sufficiently recent version of GCC.
 cat confdefs.h - <<_ACEOF >conftest.$ac_ext
diff -Naur binutils-2.27-pure/gprof/configure binutils-2.27/gprof/configure
--- binutils-2.27-pure/gprof/configure	2016-08-03 04:33:41.000000000 -0400
+++ binutils-2.27/gprof/configure	2022-02-10 13:39:12.845281200 -0500
@@ -12102,7 +12102,7 @@
 . $srcdir/../bfd/development.sh
 
 # Default set of GCC warnings to enable.
-GCC_WARN_CFLAGS="-W -Wall -Wstrict-prototypes -Wmissing-prototypes"
+GCC_WARN_CFLAGS="-W -Wall -Wstrict-prototypes -Wmissing-prototypes -Wno-implicit-fallthrough -Wno-cast-function-type -Wno-stringop-truncation"
 
 # Add -Wshadow if the compiler is a sufficiently recent version of GCC.
 cat confdefs.h - <<_ACEOF >conftest.$ac_ext
diff -Naur binutils-2.27-pure/ld/configure binutils-2.27/ld/configure
--- binutils-2.27-pure/ld/configure	2016-08-03 04:33:40.000000000 -0400
+++ binutils-2.27/ld/configure	2022-02-10 13:39:12.905282100 -0500
@@ -15559,7 +15559,7 @@
 . $srcdir/../bfd/development.sh
 
 # Default set of GCC warnings to enable.
-GCC_WARN_CFLAGS="-W -Wall -Wstrict-prototypes -Wmissing-prototypes"
+GCC_WARN_CFLAGS="-W -Wall -Wstrict-prototypes -Wmissing-prototypes -Wno-implicit-fallthrough -Wno-cast-function-type -Wno-stringop-truncation"
 
 # Add -Wshadow if the compiler is a sufficiently recent version of GCC.
 cat confdefs.h - <<_ACEOF >conftest.$ac_ext
diff -Naur binutils-2.27-pure/libiberty/configure binutils-2.27/libiberty/configure
--- binutils-2.27-pure/libiberty/configure	2016-08-03 03:55:18.000000000 -0400
+++ binutils-2.27/libiberty/configure	2022-02-10 13:39:12.932782500 -0500
@@ -4485,7 +4485,7 @@
 { $as_echo "$as_me:${as_lineno-$LINENO}: result: $acx_cv_prog_cc_pedantic_" >&5
 $as_echo "$acx_cv_prog_cc_pedantic_" >&6; }
 if test $acx_cv_prog_cc_pedantic_ = yes; then :
-  ac_libiberty_warn_cflags="$ac_libiberty_warn_cflags${ac_libiberty_warn_cflags:+ }-pedantic "
+  ac_libiberty_warn_cflags="$ac_libiberty_warn_cflags${ac_libiberty_warn_cflags:+ }-pedantic -Wno-implicit-fallthrough -Wno-cast-function-type -Wno-stringop-truncation "
 fi
 
 fi
diff -Naur binutils-2.27-pure/libiberty/pex-win32.c binutils-2.27/libiberty/pex-win32.c
--- binutils-2.27-pure/libiberty/pex-win32.c	2014-10-14 03:32:04.000000000 -0400
+++ binutils-2.27/libiberty/pex-win32.c	2022-02-10 13:39:12.942782700 -0500
@@ -768,7 +768,7 @@
   OSVERSIONINFO version_info;
   STARTUPINFO si;
   PROCESS_INFORMATION pi;
-  int orig_out, orig_in, orig_err;
+  int orig_out, orig_in, orig_err = 0;
   BOOL separate_stderr = !(flags & PEX_STDERR_TO_STDOUT);
 
   /* Ensure we have inheritable descriptors to pass to the child.  */
diff -Naur binutils-2.27-pure/libiberty/waitpid.c binutils-2.27/libiberty/waitpid.c
--- binutils-2.27-pure/libiberty/waitpid.c	2013-11-04 10:33:40.000000000 -0500
+++ binutils-2.27/libiberty/waitpid.c	2022-02-10 13:39:12.945282700 -0500
@@ -23,6 +23,11 @@
 #include <sys/wait.h>
 #endif
 
+#ifdef __MINGW32__
+#include <process.h>
+#define wait(s)  _cwait(s,pid,_WAIT_CHILD)
+#endif
+
 pid_t
 waitpid (pid_t pid, int *stat_loc, int options ATTRIBUTE_UNUSED)
 {
diff -Naur binutils-2.27-pure/opcodes/configure binutils-2.27/opcodes/configure
--- binutils-2.27-pure/opcodes/configure	2016-08-03 04:33:39.000000000 -0400
+++ binutils-2.27/opcodes/configure	2022-02-10 13:39:12.985283400 -0500
@@ -11509,7 +11509,7 @@
 . $srcdir/../bfd/development.sh
 
 # Default set of GCC warnings to enable.
-GCC_WARN_CFLAGS="-W -Wall -Wstrict-prototypes -Wmissing-prototypes"
+GCC_WARN_CFLAGS="-W -Wall -Wstrict-prototypes -Wmissing-prototypes -Wno-implicit-fallthrough -Wno-cast-function-type -Wno-stringop-truncation"
 
 # Add -Wshadow if the compiler is a sufficiently recent version of GCC.
 cat confdefs.h - <<_ACEOF >conftest.$ac_ext
